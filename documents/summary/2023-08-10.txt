* 명령어 및 yaml 파일 정리
git
    https://github.com/dpcalfola/kubernetes_vagrant_config.git


1. pod 에 Label 추가
    1.1 yaml 설정에서 labeling 가능
        1.1.1 /yaml/label.yaml 참고
    1.2 pod 생성 후 labeling 가능
        1.2.2 add label
            kubectl label pod {pod_name} app=nginx
        1.2.3 remove label
            kubectl label pod {pod_name} app-
    1.3 label 확인
        1.3.1 kubectl get pod --show-labels
    1.4 selector
        1.4.1 selector 를 통해 label 을 선택하여 pod 조회 가능
            - kubectl get pod -l app=nginx
        1.4.2 selector 를 통해 label 을 선택하여 pod 삭제 가능
            - kubectl delete pod -l app=nginx
        1.4.3 selector 를 통해 label 을 선택하여 pod 에 label 추가 가능
            - kubectl label pod -l app=nginx app=nginx2



2. restartPolicy
    2.1 Always
        2.1.1 pod 이 종료되면 다시 시작
    2.2 OnFailure
        2.2.1 pod 이 실패하면 다시 시작
    2.3 Never
        2.3.1 pod 이 종료되면 다시 시작하지 않음



3. env
    3.1 .yaml 설정에서 env 설정 가능
        3.1.1 /yaml/env.yaml 참고
    3.2 pod 생성 후 env 설정 가능
        3.2.1 add env
            kubectl set env pod {pod_name} {env_name}={env_value}
        3.2.2 remove env
            kubectl set env pod {pod_name} {env_name}-



4. hostpath
    4.1 docker volume 과 유사한 개념
    4.2 hostpath 설정
        4.2.1 /yaml/hostpath.yaml 참고
    4.3 hostpath 확인
        4.3.1 kubectl exec -it {pod_name} -- ls /<data>



5. livenessprobe
    5.1 pod 이 정상적으로 동작하는지 확인
    5.2 livenessprobe 설정
        5.2.1 /yaml/livenessprobe.yaml 참고
    5.3 liveneesprobe 를 통해 pod 조건 실패시 pod를 재시작하도록 설정 가능
        5.3.1 (index.html get 요청 실패시 pod 재시작)
            kubectl exec livenessprobe -- rm /usr/share/nginx/html/index.html && k logs livenessprobe -f



